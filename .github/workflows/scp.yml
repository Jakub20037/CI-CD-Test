name: Deploy to VM
 
on:
  push:
    branches: [ main ]
 
jobs:
  deploy:
    runs-on: self-hosted
 
    defaults:
      run:
        shell: powershell
 
    env:
      VM_HOST: 10.3.15.56
      VM_USER: azubi
      DEST_DIR: /home/azubi/ci_cd_test    
      SSH_PORT: "22"
      # KEX-Fallback für älteren Windows-OpenSSH-Client. Nach Update entfernen.
      KEX: curve25519-sha256,diffie-hellman-group14-sha256
 
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
 
      - name: Prepare SSH files in runner temp
        run: |
          $KeyPath    = Join-Path $env:RUNNER_TEMP "id_rsa"
          $KnownHosts = Join-Path $env:RUNNER_TEMP "known_hosts"
 
          # Private Key (aus Secret) in Temp schreiben
          @"
          ${{ secrets.SSH_PRIVATE_KEY }}
          "@ | Set-Content -Path $KeyPath -NoNewline -Encoding ascii
 
          # Rechte restriktiv (nur lesen für aktuellen User)
          icacls $KeyPath /inheritance:r /grant:r "$($env:USERNAME):(R)" | Out-Null
 
          # known_hosts generieren (mit KEX-Fallback)
          ssh-keyscan -p $env:SSH_PORT -o "KexAlgorithms=$env:KEX" -H $env:VM_HOST |
            Out-File -FilePath $KnownHosts -Append -Encoding ascii
 
          # Pfade für spätere Steps exportieren
          "KEY_PATH=$KeyPath"       | Out-File -FilePath $env:GITHUB_ENV -Append
          "KNOWN_HOSTS=$KnownHosts" | Out-File -FilePath $env:GITHUB_ENV -Append
 
      - name: Ensure destination exists (do not quote ~)
        run: |
          ssh -i "$env:KEY_PATH" -p "$env:SSH_PORT" `
            -o "UserKnownHostsFile=$env:KNOWN_HOSTS" `
            -o "KexAlgorithms=$env:KEX" `
            "$env:VM_USER@$env:VM_HOST" "mkdir -p $env:DEST_DIR"
 
      - name: Deploy via scp (do not quote ~)
        run: |
          scp -i "$env:KEY_PATH" -P "$env:SSH_PORT" `
            -o "UserKnownHostsFile=$env:KNOWN_HOSTS" `
            -o "KexAlgorithms=$env:KEX" `
            -r . "$env:VM_USER@$env:VM_HOST:$env:DEST_DIR"